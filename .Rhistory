mutate(
order = row_number()
# change type names for output
,type = ifelse(type == objTypes[1]
,"Litter"
,ifelse(type == objTypes[2]
,"Grease&Gum"
,ifelse(type == objTypes[3]
,"Graffitti"
,ifelse(type == objTypes[4]
,"Needles"
,ifelse(type == objTypes[5]
,"Glass"
,ifelse(type == objTypes[6]
,"Poop&Urine"
,"Other"
)
)
)
)
)
)
)
r2d3(
data = df
,script = "lollipop.js"
)
library(r2d3)
df <- raw %>%
#subset(type %in% input$usrObjs) %>%
group_by(type) %>%
summarise(
totItems = sum(itemsTagged)
) %>%
arrange(totItems) %>%
mutate(
order = row_number()
# change type names for output
,type = ifelse(type == objTypes[1]
,"Litter"
,ifelse(type == objTypes[2]
,"Grease&Gum"
,ifelse(type == objTypes[3]
,"Graffitti"
,ifelse(type == objTypes[4]
,"Needles"
,ifelse(type == objTypes[5]
,"Glass"
,ifelse(type == objTypes[6]
,"Poop&Urine"
,"Other"
)
)
)
)
)
)
)
r2d3(
data = df
,script = "lollipop.js"
)
library(r2d3)
df <- raw %>%
#subset(type %in% input$usrObjs) %>%
group_by(type) %>%
summarise(
totItems = sum(itemsTagged)
) %>%
arrange(totItems) %>%
mutate(
order = row_number()
# change type names for output
,type = ifelse(type == objTypes[1]
,"Litter"
,ifelse(type == objTypes[2]
,"Grease&Gum"
,ifelse(type == objTypes[3]
,"Graffitti"
,ifelse(type == objTypes[4]
,"Needles"
,ifelse(type == objTypes[5]
,"Glass"
,ifelse(type == objTypes[6]
,"Poop&Urine"
,"Other"
)
)
)
)
)
)
)
r2d3(
data = df[itemsTagged]
,script = "lollipop.js"
)
library(r2d3)
df <- raw %>%
#subset(type %in% input$usrObjs) %>%
group_by(type) %>%
summarise(
totItems = sum(itemsTagged)
) %>%
arrange(totItems) %>%
mutate(
order = row_number()
# change type names for output
,type = ifelse(type == objTypes[1]
,"Litter"
,ifelse(type == objTypes[2]
,"Grease&Gum"
,ifelse(type == objTypes[3]
,"Graffitti"
,ifelse(type == objTypes[4]
,"Needles"
,ifelse(type == objTypes[5]
,"Glass"
,ifelse(type == objTypes[6]
,"Poop&Urine"
,"Other"
)
)
)
)
)
)
)
r2d3(
data = df$totItems
,script = "lollipop.js"
)
View(df)
df$totItems
library(r2d3)
df <- raw %>%
#subset(type %in% input$usrObjs) %>%
group_by(type) %>%
summarise(
totItems = sum(itemsTagged)
) %>%
arrange(totItems) %>%
mutate(
order = row_number()
# change type names for output
,type = ifelse(type == objTypes[1]
,"Litter"
,ifelse(type == objTypes[2]
,"Grease&Gum"
,ifelse(type == objTypes[3]
,"Graffitti"
,ifelse(type == objTypes[4]
,"Needles"
,ifelse(type == objTypes[5]
,"Glass"
,ifelse(type == objTypes[6]
,"Poop&Urine"
,"Other"
)
)
)
)
)
)
)
r2d3(
data = df$totItems
,script = "lollipop.js"
)
library(r2d3)
df <- raw %>%
#subset(type %in% input$usrObjs) %>%
group_by(type) %>%
summarise(
totItems = sum(itemsTagged)
) %>%
arrange(totItems) %>%
mutate(
order = row_number()
# change type names for output
,type = ifelse(type == objTypes[1]
,"Litter"
,ifelse(type == objTypes[2]
,"Grease&Gum"
,ifelse(type == objTypes[3]
,"Graffitti"
,ifelse(type == objTypes[4]
,"Needles"
,ifelse(type == objTypes[5]
,"Glass"
,ifelse(type == objTypes[6]
,"Poop&Urine"
,"Other"
)
)
)
)
)
)
)
r2d3(
data = df$totItems
,script = "lollipop.js"
)
library(r2d3)
df <- raw %>%
#subset(type %in% input$usrObjs) %>%
group_by(type) %>%
summarise(
totItems = sum(itemsTagged)
) %>%
arrange(totItems) %>%
mutate(
order = row_number()
# change type names for output
,type = ifelse(type == objTypes[1]
,"Litter"
,ifelse(type == objTypes[2]
,"Grease&Gum"
,ifelse(type == objTypes[3]
,"Graffitti"
,ifelse(type == objTypes[4]
,"Needles"
,ifelse(type == objTypes[5]
,"Glass"
,ifelse(type == objTypes[6]
,"Poop&Urine"
,"Other"
)
)
)
)
)
)
)
r2d3(
data = df$totItems
,script = "lollipop.js"
)
library(r2d3)
df <- raw %>%
#subset(type %in% input$usrObjs) %>%
group_by(type) %>%
summarise(
totItems = sum(itemsTagged)
) %>%
arrange(totItems) %>%
mutate(
order = row_number()
# change type names for output
,type = ifelse(type == objTypes[1]
,"Litter"
,ifelse(type == objTypes[2]
,"Grease&Gum"
,ifelse(type == objTypes[3]
,"Graffitti"
,ifelse(type == objTypes[4]
,"Needles"
,ifelse(type == objTypes[5]
,"Glass"
,ifelse(type == objTypes[6]
,"Poop&Urine"
,"Other"
)
)
)
)
)
)
)
r2d3(
data = df$totItems
,script = "lollipop.js"
)
library(r2d3)
df <- raw %>%
#subset(type %in% input$usrObjs) %>%
group_by(type) %>%
summarise(
totItems = sum(itemsTagged)
) %>%
arrange(totItems) %>%
mutate(
order = row_number()
# change type names for output
,type = ifelse(type == objTypes[1]
,"Litter"
,ifelse(type == objTypes[2]
,"Grease&Gum"
,ifelse(type == objTypes[3]
,"Graffitti"
,ifelse(type == objTypes[4]
,"Needles"
,ifelse(type == objTypes[5]
,"Glass"
,ifelse(type == objTypes[6]
,"Poop&Urine"
,"Other"
)
)
)
)
)
)
)
r2d3(
data = df$totItems
,script = "lollipop.js"
)
library(r2d3)
df <- raw %>%
#subset(type %in% input$usrObjs) %>%
group_by(type) %>%
summarise(
totItems = sum(itemsTagged)
) %>%
arrange(totItems) %>%
mutate(
order = row_number()
# change type names for output
,type = ifelse(type == objTypes[1]
,"Litter"
,ifelse(type == objTypes[2]
,"Grease&Gum"
,ifelse(type == objTypes[3]
,"Graffitti"
,ifelse(type == objTypes[4]
,"Needles"
,ifelse(type == objTypes[5]
,"Glass"
,ifelse(type == objTypes[6]
,"Poop&Urine"
,"Other"
)
)
)
)
)
)
)
r2d3(
data = df$totItems
,script = "lollipop.js"
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
colObjs <- colorBin(
# rubbish E935f2 & lightpink F4B2F8 | F6A2FC
palette = c("#E935f2", "#E935f2")
,domain = c(1,250)
)
runApp()
runApp()
runApp()
runApp()
runApp()
otherTypes[c(4,5,6)]
runApp()
runApp()
runApp()
runApp()
runApp()
unique(raw$type)
runApp()
typeColors <- c(
"#E935F2" # litter
,"#" #
,"#" #
,"#" #
,"#" #
,"#" #
,"#" #
,"#" #
,"#" #
)
runApp()
runApp()
allLabels[[7]]
allLabels[[1]]
"hello"
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
unique(raw$street)
runApp()
runApp()
~raw$long
runApp()
runApp()
setwd("~/My Data Files/Rubbish/DASHBOARD")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/My Data Files/Rubbish/DASHBOARD")
runApp()
runApp()
# base csv data
# cleaned via raw/clean_script.R
# used for base map data layer
# will be manipulated later on
raw <- read.csv(FIN) %>%
subset(lat < 37.785)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(raw)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
providers
view(providers)
providers.head()
head(providers)
str(providers_loaded()$providers)
str(providers_loaded()$providers['chr'])
str(providers_loaded()$providers$chr)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
